---
version: 2
orbs:
  gh: circleci/github-cli@2.0

jobs:
  BASE: &base # Only used to centralized some common configs
    docker:
      - image: node:latest
    working_directory: ~/cli

  installdeps:
    <<: *base
    steps:
      - checkout
      - restore_cache: &restore_cache
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package-lock.json"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: npm ci
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "package-lock.json"}}
          paths:
            - ~/cli/node_modules

  CI: &test
    <<: *base
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run:
          name: Build plugin
          command: npm run build
      - run:
          name: Testing
          command: npm run test
      - persist_to_workspace:
          root: ~/cli
          paths:
            - lib

  bumpprerelease:
    <<: *base
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - attach_workspace:
          at: ~/cli
      - run:
          name: Set Git Creds
          command: git config user.email "gael.motte@gmail.com" && git config user.name "Gael Motte"
      - add_ssh_keys:
          fingerprints:
            - 'c3:9a:d1:80:21:fb:38:02:1c:65:77:03:51:c2:0e:37'
      - run:
          name: Bump Preminor
          command: npm run bumpprerelease

  bumpversion:
    <<: *base
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - attach_workspace:
          at: ~/cli
      - run:
          name: Set Git Creds
          command: git config user.email "gael.motte@gmail.com" && git config user.name "Gael Motte"
      - add_ssh_keys:
          fingerprints:
            - 'c3:9a:d1:80:21:fb:38:02:1c:65:77:03:51:c2:0e:37'
      - run:
          name: Bump Minor or Patch
          command: npm run bumpversion

  publishtonpm:
    <<: *base
    working_directory: ~/cli
    steps:
      - checkout
      - restore_cache:
          <<: *restore_cache
      - attach_workspace:
          at: ~/cli
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/cli/.npmrc
      - run:
          name: Publish package
          command: npm publish --access public

  hotfixback:
    <<: *base
    working_directory: ~/cli
    steps:
      - gh/install
      - checkout
      - restore_cache:
          <<: *restore_cache
      - attach_workspace:
          at: ~/cli
      - run:
          name: create branch and push
          command: branch="hotfixback-$(date +'%Y-%m-%d-%H-%M')"; npx not-prerelease && git checkout -b  $branch && git push --set-upstream origin $branch;
      - run:
          command: |
            npx not-prerelease && gh pr create --title $branch -B develop
          name: Create Pull Request if HOTFIX

  releaseback:
    <<: *base
    working_directory: ~/cli
    steps:
      - gh/install
      - checkout
      - restore_cache:
          <<: *restore_cache
      - attach_workspace:
          at: ~/cli
      - run:
          command: |
            npx is-prerelease &&  gh pr create --title $branch -B develop
          name: Create Pull Request if standard releases

workflows:
  version: 2
  'New Code Checks':
    jobs:
      - installdeps:
          filters:
            branches:
              ignore:
                - main
                - develop
      - CI:
          requires:
            - installdeps
  'Develop Checks':
    jobs:
      - installdeps:
          filters:
            branches:
              only: develop
      - CI:
          requires:
            - installdeps
      - bumpprerelease:
          requires:
            - CI

  'Main Checks':
    jobs:
      - installdeps:
          filters:
            branches:
              only: main
      - CI:
          requires:
            - installdeps
      - hotfixback:
          requires:
            - CI
      - bumpversion:
          requires:
            - hotfixback
      - releaseback:
          requires:
            - bumpversion

  'Publish':
    jobs:
      - installdeps:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - publishtonpm:
          requires:
            - installdeps
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
